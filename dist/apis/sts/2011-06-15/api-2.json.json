{"Metadata":{"APIVersion":"2011-06-15","EndpointPrefix":"sts","SigningName":"","ServiceAbbreviation":"AWS STS","ServiceFullName":"AWS Security Token Service","SignatureVersion":"v4","JSONVersion":"","TargetPrefix":"","Protocol":"query"},"Operations":{"AssumeRole":{"ExportedName":"AssumeRole","Name":"AssumeRole","Documentation":"// Returns a set of temporary security credentials (consisting of an access\n// key ID, a secret access key, and a security token) that you can use to access\n// AWS resources that you might not normally have access to. Typically, you\n// use AssumeRole for cross-account access or federation. For a comparison of\n// AssumeRole with the other APIs that produce temporary credentials, see Requesting\n// Temporary Security Credentials (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html)\n// and Comparing the AWS STS APIs (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison)\n// in the IAM User Guide.\n// \n//  Important: You cannot call AssumeRole by using AWS root account credentials;\n// access is denied. You must use credentials for an IAM user or an IAM role\n// to call AssumeRole. \n// \n// For cross-account access, imagine that you own multiple accounts and need\n// to access resources in each account. You could create long-term credentials\n// in each account to access those resources. However, managing all those credentials\n// and remembering which one can access which account can be time consuming.\n// Instead, you can create one set of long-term credentials in one account and\n// then use temporary security credentials to access all the other accounts\n// by assuming roles in those accounts. For more information about roles, see\n// IAM Roles (Delegation and Federation) (http://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html)\n// in the IAM User Guide. \n// \n// For federation, you can, for example, grant single sign-on access to the\n// AWS Management Console. If you already have an identity and authentication\n// system in your corporate network, you don't have to recreate user identities\n// in AWS in order to grant those user identities access to AWS. Instead, after\n// a user has been authenticated, you call AssumeRole (and specify the role\n// with the appropriate permissions) to get temporary security credentials for\n// that user. With those temporary security credentials, you construct a sign-in\n// URL that users can use to access the console. For more information, see Common\n// Scenarios for Temporary Credentials (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html#sts-introduction)\n// in the IAM User Guide.\n// \n// The temporary security credentials are valid for the duration that you specified\n// when calling AssumeRole, which can be from 900 seconds (15 minutes) to a\n// maximum of 3600 seconds (1 hour). The default is 1 hour. \n// \n// The temporary security credentials created by AssumeRole can be used to\n// make API calls to any AWS service with the following exception: you cannot\n// call the STS service's GetFederationToken or GetSessionToken APIs.\n// \n// Optionally, you can pass an IAM access policy to this operation. If you\n// choose not to pass a policy, the temporary security credentials that are\n// returned by the operation have the permissions that are defined in the access\n// policy of the role that is being assumed. If you pass a policy to this operation,\n// the temporary security credentials that are returned by the operation have\n// the permissions that are allowed by both the access policy of the role that\n// is being assumed,  and  the policy that you pass. This gives you a way to\n// further restrict the permissions for the resulting temporary security credentials.\n// You cannot use the passed policy to grant permissions that are in excess\n// of those allowed by the access policy of the role that is being assumed.\n// For more information, see Permissions for AssumeRole, AssumeRoleWithSAML,\n// and AssumeRoleWithWebIdentity (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html)\n// in the IAM User Guide.\n// \n// To assume a role, your AWS account must be trusted by the role. The trust\n// relationship is defined in the role's trust policy when the role is created.\n// That trust policy states which accounts are allowed to delegate access to\n// this account's role.\n// \n// The user who wants to access the role must also have permissions delegated\n// from the role's administrator. If the user is in a different account than\n// the role, then the user's administrator must attach a policy that allows\n// the user to call AssumeRole on the ARN of the role in the other account.\n// If the user is in the same account as the role, then you can either attach\n// a policy to the user (identical to the previous different account user),\n// or you can add the user as a principal directly in the role's trust policy\n// \n//  Using MFA with AssumeRole \n// \n// You can optionally include multi-factor authentication (MFA) information\n// when you call AssumeRole. This is useful for cross-account scenarios in which\n// you want to make sure that the user who is assuming the role has been authenticated\n// using an AWS MFA device. In that scenario, the trust policy of the role being\n// assumed includes a condition that tests for MFA authentication; if the caller\n// does not include valid MFA information, the request to assume the role is\n// denied. The condition in a trust policy that tests for MFA authentication\n// might look like the following example.\n// \n//  \"Condition\": {\"Bool\": {\"aws:MultiFactorAuthPresent\": true}} \n// \n// For more information, see Configuring MFA-Protected API Access (http://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html)\n// in the IAM User Guide guide.\n// \n// To use MFA with AssumeRole, you pass values for the SerialNumber and TokenCode\n// parameters. The SerialNumber value identifies the user's hardware or virtual\n// MFA device. The TokenCode is the time-based one-time password (TOTP) that\n// the MFA devices produces.\n","HTTP":{"Method":"POST","RequestURI":"/","ResponseCode":0},"input":{"Documentation":"","shape":"AssumeRoleInput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"output":{"Documentation":"","shape":"AssumeRoleOutput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Paginator":null,"deprecated":false,"authtype":""},"AssumeRoleWithSAML":{"ExportedName":"AssumeRoleWithSAML","Name":"AssumeRoleWithSAML","Documentation":"// Returns a set of temporary security credentials for users who have been authenticated\n// via a SAML authentication response. This operation provides a mechanism for\n// tying an enterprise identity store or directory to role-based AWS access\n// without user-specific credentials or configuration. For a comparison of AssumeRoleWithSAML\n// with the other APIs that produce temporary credentials, see Requesting Temporary\n// Security Credentials (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html)\n// and Comparing the AWS STS APIs (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison)\n// in the IAM User Guide.\n// \n// The temporary security credentials returned by this operation consist of\n// an access key ID, a secret access key, and a security token. Applications\n// can use these temporary security credentials to sign calls to AWS services.\n// \n// The temporary security credentials are valid for the duration that you specified\n// when calling AssumeRole, or until the time specified in the SAML authentication\n// response's SessionNotOnOrAfter value, whichever is shorter. The duration\n// can be from 900 seconds (15 minutes) to a maximum of 3600 seconds (1 hour).\n// The default is 1 hour.\n// \n// The temporary security credentials created by AssumeRoleWithSAML can be\n// used to make API calls to any AWS service with the following exception: you\n// cannot call the STS service's GetFederationToken or GetSessionToken APIs.\n// \n// Optionally, you can pass an IAM access policy to this operation. If you\n// choose not to pass a policy, the temporary security credentials that are\n// returned by the operation have the permissions that are defined in the access\n// policy of the role that is being assumed. If you pass a policy to this operation,\n// the temporary security credentials that are returned by the operation have\n// the permissions that are allowed by both the access policy of the role that\n// is being assumed,  and  the policy that you pass. This gives you a way to\n// further restrict the permissions for the resulting temporary security credentials.\n// You cannot use the passed policy to grant permissions that are in excess\n// of those allowed by the access policy of the role that is being assumed.\n// For more information, see Permissions for AssumeRole, AssumeRoleWithSAML,\n// and AssumeRoleWithWebIdentity (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html)\n// in the IAM User Guide.\n// \n// Before your application can call AssumeRoleWithSAML, you must configure\n// your SAML identity provider (IdP) to issue the claims required by AWS. Additionally,\n// you must use AWS Identity and Access Management (IAM) to create a SAML provider\n// entity in your AWS account that represents your identity provider, and create\n// an IAM role that specifies this SAML provider in its trust policy. \n// \n// Calling AssumeRoleWithSAML does not require the use of AWS security credentials.\n// The identity of the caller is validated by using keys in the metadata document\n// that is uploaded for the SAML provider entity for your identity provider.\n// \n//  Calling AssumeRoleWithSAML can result in an entry in your AWS CloudTrail\n// logs. The entry includes the value in the NameID element of the SAML assertion.\n// We recommend that you use a NameIDType that is not associated with any personally\n// identifiable information (PII). For example, you could instead use the Persistent\n// Identifier (urn:oasis:names:tc:SAML:2.0:nameid-format:persistent).\n// \n//  For more information, see the following resources:\n// \n//    About SAML 2.0-based Federation (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html)\n// in the IAM User Guide. \n// \n//    Creating SAML Identity Providers (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml.html)\n// in the IAM User Guide. \n// \n//    Configuring a Relying Party and Claims (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml_relying-party.html)\n// in the IAM User Guide. \n// \n//    Creating a Role for SAML 2.0 Federation (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_saml.html)\n// in the IAM User Guide.\n","HTTP":{"Method":"POST","RequestURI":"/","ResponseCode":0},"input":{"Documentation":"","shape":"AssumeRoleWithSAMLInput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"output":{"Documentation":"","shape":"AssumeRoleWithSAMLOutput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Paginator":null,"deprecated":false,"authtype":""},"AssumeRoleWithWebIdentity":{"ExportedName":"AssumeRoleWithWebIdentity","Name":"AssumeRoleWithWebIdentity","Documentation":"// Returns a set of temporary security credentials for users who have been authenticated\n// in a mobile or web application with a web identity provider, such as Amazon\n// Cognito, Login with Amazon, Facebook, Google, or any OpenID Connect-compatible\n// identity provider.\n// \n//  For mobile applications, we recommend that you use Amazon Cognito. You\n// can use Amazon Cognito with the AWS SDK for iOS (http://aws.amazon.com/sdkforios/)\n// and the AWS SDK for Android (http://aws.amazon.com/sdkforandroid/) to uniquely\n// identify a user and supply the user with a consistent identity throughout\n// the lifetime of an application.\n// \n// To learn more about Amazon Cognito, see Amazon Cognito Overview (http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e840)\n// in the AWS SDK for Android Developer Guide guide and Amazon Cognito Overview\n// (http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-auth.html#d0e664)\n// in the AWS SDK for iOS Developer Guide.\n// \n//  Calling AssumeRoleWithWebIdentity does not require the use of AWS security\n// credentials. Therefore, you can distribute an application (for example, on\n// mobile devices) that requests temporary security credentials without including\n// long-term AWS credentials in the application, and without deploying server-based\n// proxy services that use long-term AWS credentials. Instead, the identity\n// of the caller is validated by using a token from the web identity provider.\n// For a comparison of AssumeRoleWithWebIdentity with the other APIs that produce\n// temporary credentials, see Requesting Temporary Security Credentials (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html)\n// and Comparing the AWS STS APIs (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison)\n// in the IAM User Guide.\n// \n// The temporary security credentials returned by this API consist of an access\n// key ID, a secret access key, and a security token. Applications can use these\n// temporary security credentials to sign calls to AWS service APIs.\n// \n// The credentials are valid for the duration that you specified when calling\n// AssumeRoleWithWebIdentity, which can be from 900 seconds (15 minutes) to\n// a maximum of 3600 seconds (1 hour). The default is 1 hour. \n// \n// The temporary security credentials created by AssumeRoleWithWebIdentity\n// can be used to make API calls to any AWS service with the following exception:\n// you cannot call the STS service's GetFederationToken or GetSessionToken APIs.\n// \n// Optionally, you can pass an IAM access policy to this operation. If you\n// choose not to pass a policy, the temporary security credentials that are\n// returned by the operation have the permissions that are defined in the access\n// policy of the role that is being assumed. If you pass a policy to this operation,\n// the temporary security credentials that are returned by the operation have\n// the permissions that are allowed by both the access policy of the role that\n// is being assumed,  and  the policy that you pass. This gives you a way to\n// further restrict the permissions for the resulting temporary security credentials.\n// You cannot use the passed policy to grant permissions that are in excess\n// of those allowed by the access policy of the role that is being assumed.\n// For more information, see Permissions for AssumeRole, AssumeRoleWithSAML,\n// and AssumeRoleWithWebIdentity (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html)\n// in the IAM User Guide.\n// \n// Before your application can call AssumeRoleWithWebIdentity, you must have\n// an identity token from a supported identity provider and create a role that\n// the application can assume. The role that your application assumes must trust\n// the identity provider that is associated with the identity token. In other\n// words, the identity provider must be specified in the role's trust policy.\n// \n//  Calling AssumeRoleWithWebIdentity can result in an entry in your AWS CloudTrail\n// logs. The entry includes the Subject (http://openid.net/specs/openid-connect-core-1_0.html#Claims)\n// of the provided Web Identity Token. We recommend that you avoid using any\n// personally identifiable information (PII) in this field. For example, you\n// could instead use a GUID or a pairwise identifier, as suggested in the OIDC\n// specification (http://openid.net/specs/openid-connect-core-1_0.html#SubjectIDTypes).\n// \n//  For more information about how to use web identity federation and the AssumeRoleWithWebIdentity\n// API, see the following resources: \n// \n//    Using Web Identity Federation APIs for Mobile Apps (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc_manual)\n// and Federation Through a Web-based Identity Provider (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity).\n// \n//     Web Identity Federation Playground (https://web-identity-federation-playground.s3.amazonaws.com/index.html).\n// This interactive website lets you walk through the process of authenticating\n// via Login with Amazon, Facebook, or Google, getting temporary security credentials,\n// and then using those credentials to make a request to AWS. \n// \n//    AWS SDK for iOS (http://aws.amazon.com/sdkforios/) and AWS SDK for Android\n// (http://aws.amazon.com/sdkforandroid/). These toolkits contain sample apps\n// that show how to invoke the identity providers, and then how to use the information\n// from these providers to get and use temporary security credentials. \n// \n//    Web Identity Federation with Mobile Applications (http://aws.amazon.com/articles/4617974389850313).\n// This article discusses web identity federation and shows an example of how\n// to use web identity federation to get access to content in Amazon S3.\n","HTTP":{"Method":"POST","RequestURI":"/","ResponseCode":0},"input":{"Documentation":"","shape":"AssumeRoleWithWebIdentityInput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"output":{"Documentation":"","shape":"AssumeRoleWithWebIdentityOutput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Paginator":null,"deprecated":false,"authtype":""},"DecodeAuthorizationMessage":{"ExportedName":"DecodeAuthorizationMessage","Name":"DecodeAuthorizationMessage","Documentation":"// Decodes additional information about the authorization status of a request\n// from an encoded message returned in response to an AWS request.\n// \n// For example, if a user is not authorized to perform an action that he or\n// she has requested, the request returns a Client.UnauthorizedOperation response\n// (an HTTP 403 response). Some AWS actions additionally return an encoded message\n// that can provide details about this authorization failure. \n// \n//  Only certain AWS actions return an encoded authorization message. The documentation\n// for an individual action indicates whether that action returns an encoded\n// message in addition to returning an HTTP code.\n// \n//  The message is encoded because the details of the authorization status\n// can constitute privileged information that the user who requested the action\n// should not see. To decode an authorization status message, a user must be\n// granted permissions via an IAM policy to request the DecodeAuthorizationMessage\n// (sts:DecodeAuthorizationMessage) action. \n// \n// The decoded message includes the following type of information:\n// \n//   Whether the request was denied due to an explicit deny or due to the absence\n// of an explicit allow. For more information, see Determining Whether a Request\n// is Allowed or Denied (http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-denyallow)\n// in the IAM User Guide. \n// \n//   The principal who made the request.\n// \n//   The requested action.\n// \n//   The requested resource.\n// \n//   The values of condition keys in the context of the user's request.\n","HTTP":{"Method":"POST","RequestURI":"/","ResponseCode":0},"input":{"Documentation":"","shape":"DecodeAuthorizationMessageInput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"output":{"Documentation":"","shape":"DecodeAuthorizationMessageOutput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Paginator":null,"deprecated":false,"authtype":""},"GetCallerIdentity":{"ExportedName":"GetCallerIdentity","Name":"GetCallerIdentity","Documentation":"// Returns details about the IAM identity whose credentials are used to call\n// the API.\n","HTTP":{"Method":"POST","RequestURI":"/","ResponseCode":0},"input":{"Documentation":"","shape":"GetCallerIdentityInput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"output":{"Documentation":"","shape":"GetCallerIdentityOutput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Paginator":null,"deprecated":false,"authtype":""},"GetFederationToken":{"ExportedName":"GetFederationToken","Name":"GetFederationToken","Documentation":"// Returns a set of temporary security credentials (consisting of an access\n// key ID, a secret access key, and a security token) for a federated user.\n// A typical use is in a proxy application that gets temporary security credentials\n// on behalf of distributed applications inside a corporate network. Because\n// you must call the GetFederationToken action using the long-term security\n// credentials of an IAM user, this call is appropriate in contexts where those\n// credentials can be safely stored, usually in a server-based application.\n// For a comparison of GetFederationToken with the other APIs that produce temporary\n// credentials, see Requesting Temporary Security Credentials (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html)\n// and Comparing the AWS STS APIs (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison)\n// in the IAM User Guide.\n// \n//   If you are creating a mobile-based or browser-based app that can authenticate\n// users using a web identity provider like Login with Amazon, Facebook, Google,\n// or an OpenID Connect-compatible identity provider, we recommend that you\n// use Amazon Cognito (http://aws.amazon.com/cognito/) or AssumeRoleWithWebIdentity.\n// For more information, see Federation Through a Web-based Identity Provider\n// (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity).\n// \n//  The GetFederationToken action must be called by using the long-term AWS\n// security credentials of an IAM user. You can also call GetFederationToken\n// using the security credentials of an AWS root account, but we do not recommended\n// it. Instead, we recommend that you create an IAM user for the purpose of\n// the proxy application and then attach a policy to the IAM user that limits\n// federated users to only the actions and resources that they need access to.\n// For more information, see IAM Best Practices (http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html)\n// in the IAM User Guide. \n// \n// The temporary security credentials that are obtained by using the long-term\n// credentials of an IAM user are valid for the specified duration, from 900\n// seconds (15 minutes) up to a maximium of 129600 seconds (36 hours). The default\n// is 43200 seconds (12 hours). Temporary credentials that are obtained by using\n// AWS root account credentials have a maximum duration of 3600 seconds (1 hour).\n// \n// The temporary security credentials created by GetFederationToken can be\n// used to make API calls to any AWS service with the following exceptions:\n// \n//   You cannot use these credentials to call any IAM APIs.\n// \n//   You cannot call any STS APIs.\n// \n//    Permissions \n// \n// The permissions for the temporary security credentials returned by GetFederationToken\n// are determined by a combination of the following: \n// \n//   The policy or policies that are attached to the IAM user whose credentials\n// are used to call GetFederationToken.\n// \n//   The policy that is passed as a parameter in the call.\n// \n//   The passed policy is attached to the temporary security credentials that\n// result from the GetFederationToken API call--that is, to the federated user.\n// When the federated user makes an AWS request, AWS evaluates the policy attached\n// to the federated user in combination with the policy or policies attached\n// to the IAM user whose credentials were used to call GetFederationToken. AWS\n// allows the federated user's request only when both the federated user  and\n//  the IAM user are explicitly allowed to perform the requested action. The\n// passed policy cannot grant more permissions than those that are defined in\n// the IAM user policy.\n// \n// A typical use case is that the permissions of the IAM user whose credentials\n// are used to call GetFederationToken are designed to allow access to all the\n// actions and resources that any federated user will need. Then, for individual\n// users, you pass a policy to the operation that scopes down the permissions\n// to a level that's appropriate to that individual user, using a policy that\n// allows only a subset of permissions that are granted to the IAM user. \n// \n// If you do not pass a policy, the resulting temporary security credentials\n// have no effective permissions. The only exception is when the temporary security\n// credentials are used to access a resource that has a resource-based policy\n// that specifically allows the federated user to access the resource.\n// \n// For more information about how permissions work, see Permissions for GetFederationToken\n// (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_getfederationtoken.html).\n// For information about using GetFederationToken to create temporary security\n// credentials, see GetFederationToken—Federation Through a Custom Identity\n// Broker (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken).\n","HTTP":{"Method":"POST","RequestURI":"/","ResponseCode":0},"input":{"Documentation":"","shape":"GetFederationTokenInput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"output":{"Documentation":"","shape":"GetFederationTokenOutput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Paginator":null,"deprecated":false,"authtype":""},"GetSessionToken":{"ExportedName":"GetSessionToken","Name":"GetSessionToken","Documentation":"// Returns a set of temporary credentials for an AWS account or IAM user. The\n// credentials consist of an access key ID, a secret access key, and a security\n// token. Typically, you use GetSessionToken if you want to use MFA to protect\n// programmatic calls to specific AWS APIs like Amazon EC2 StopInstances. MFA-enabled\n// IAM users would need to call GetSessionToken and submit an MFA code that\n// is associated with their MFA device. Using the temporary security credentials\n// that are returned from the call, IAM users can then make programmatic calls\n// to APIs that require MFA authentication. If you do not supply a correct MFA\n// code, then the API returns an access denied error. For a comparison of GetSessionToken\n// with the other APIs that produce temporary credentials, see Requesting Temporary\n// Security Credentials (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html)\n// and Comparing the AWS STS APIs (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison)\n// in the IAM User Guide.\n// \n// The GetSessionToken action must be called by using the long-term AWS security\n// credentials of the AWS account or an IAM user. Credentials that are created\n// by IAM users are valid for the duration that you specify, from 900 seconds\n// (15 minutes) up to a maximum of 129600 seconds (36 hours), with a default\n// of 43200 seconds (12 hours); credentials that are created by using account\n// credentials can range from 900 seconds (15 minutes) up to a maximum of 3600\n// seconds (1 hour), with a default of 1 hour. \n// \n// The temporary security credentials created by GetSessionToken can be used\n// to make API calls to any AWS service with the following exceptions:\n// \n//   You cannot call any IAM APIs unless MFA authentication information is\n// included in the request.\n// \n//   You cannot call any STS API except AssumeRole.\n// \n//    We recommend that you do not call GetSessionToken with root account credentials.\n// Instead, follow our best practices (http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#create-iam-users)\n// by creating one or more IAM users, giving them the necessary permissions,\n// and using IAM users for everyday interaction with AWS. \n// \n//  The permissions associated with the temporary security credentials returned\n// by GetSessionToken are based on the permissions associated with account or\n// IAM user whose credentials are used to call the action. If GetSessionToken\n// is called using root account credentials, the temporary credentials have\n// root account permissions. Similarly, if GetSessionToken is called using the\n// credentials of an IAM user, the temporary credentials have the same permissions\n// as the IAM user. \n// \n// For more information about using GetSessionToken to create temporary credentials,\n// go to Temporary Credentials for Users in Untrusted Environments (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken)\n// in the IAM User Guide.\n","HTTP":{"Method":"POST","RequestURI":"/","ResponseCode":0},"input":{"Documentation":"","shape":"GetSessionTokenInput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"output":{"Documentation":"","shape":"GetSessionTokenOutput","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Paginator":null,"deprecated":false,"authtype":""}},"Shapes":{"AssumeRoleInput":{"ShapeName":"AssumeRoleInput","Documentation":"\n","members":{"DurationSeconds":{"Documentation":"// The duration, in seconds, of the role session. The value can range from 900\n// seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n// to 3600 seconds.\n","shape":"RoleDurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"ExternalId":{"Documentation":"// A unique identifier that is used by third parties when assuming roles in\n// their customers' accounts. For each role that the third party can assume,\n// they should instruct their customers to ensure the role's trust policy checks\n// for the external ID that the third party generated. Each time the third party\n// assumes the role, they should pass the customer's external ID. The external\n// ID is useful in order to help third parties bind a role to the customer who\n// created it. For more information about the external ID, see How to Use an\n// External ID When Granting Access to Your AWS Resources to a Third Party (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html)\n// in the IAM User Guide.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@:\\/-\n","shape":"externalIdType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Policy":{"Documentation":"// An IAM policy in JSON format.\n// \n// This parameter is optional. If you pass a policy, the temporary security\n// credentials that are returned by the operation have the permissions that\n// are allowed by both (the intersection of) the access policy of the role that\n// is being assumed, and the policy that you pass. This gives you a way to further\n// restrict the permissions for the resulting temporary security credentials.\n// You cannot use the passed policy to grant permissions that are in excess\n// of those allowed by the access policy of the role that is being assumed.\n// For more information, see Permissions for AssumeRole, AssumeRoleWithSAML,\n// and AssumeRoleWithWebIdentity (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html)\n// in the IAM User Guide.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters up to 2048 characters in length. The characters can be any\n// ASCII character from the space character to the end of the valid character\n// list (\\u0020-\\u00FF). It can also include the tab (\\u0009), linefeed (\\u000A),\n// and carriage return (\\u000D) characters.\n// \n//  The policy plain text must be 2048 bytes or shorter. However, an internal\n// conversion compresses it into a packed binary format with a separate limit.\n// The PackedPolicySize response element indicates by percentage how close to\n// the upper size limit the policy is, with 100% equaling the maximum allowed\n// size.\n","shape":"sessionPolicyDocumentType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"RoleArn":{"Documentation":"// The Amazon Resource Name (ARN) of the role to assume.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"RoleSessionName":{"Documentation":"// An identifier for the assumed role session.\n// \n// Use the role session name to uniquely identify a session when the same role\n// is assumed by different principals or for different reasons. In cross-account\n// scenarios, the role session name is visible to, and can be logged by the\n// account that owns the role. The role session name is also used in the ARN\n// of the assumed role principal. This means that subsequent cross-account API\n// requests using the temporary security credentials will expose the role session\n// name to the external account in their CloudTrail logs.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"roleSessionNameType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"SerialNumber":{"Documentation":"// The identification number of the MFA device that is associated with the user\n// who is making the AssumeRole call. Specify this value if the trust policy\n// of the role being assumed includes a condition that requires MFA authentication.\n// The value is either the serial number for a hardware device (such as GAHT12345678)\n// or an Amazon Resource Name (ARN) for a virtual device (such as arn:aws:iam::123456789012:mfa/user).\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"serialNumberType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"TokenCode":{"Documentation":"// The value provided by the MFA device, if the trust policy of the role being\n// assumed requires MFA (that is, if the policy includes a condition that tests\n// for MFA). If the role being assumed requires MFA and if the TokenCode value\n// is missing or expired, the AssumeRole call returns an \"access denied\" error.\n// \n// The format for this parameter, as described by its regex pattern, is a sequence\n// of six numeric digits.\n","shape":"tokenCodeType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":["RoleArn","RoleSessionName"],"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":[{"Name":"DurationSeconds","Ref":{"Documentation":"// The duration, in seconds, of the role session. The value can range from 900\n// seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n// to 3600 seconds.\n","shape":"RoleDurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"ExternalId","Ref":{"Documentation":"// A unique identifier that is used by third parties when assuming roles in\n// their customers' accounts. For each role that the third party can assume,\n// they should instruct their customers to ensure the role's trust policy checks\n// for the external ID that the third party generated. Each time the third party\n// assumes the role, they should pass the customer's external ID. The external\n// ID is useful in order to help third parties bind a role to the customer who\n// created it. For more information about the external ID, see How to Use an\n// External ID When Granting Access to Your AWS Resources to a Third Party (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html)\n// in the IAM User Guide.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@:\\/-\n","shape":"externalIdType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"Policy","Ref":{"Documentation":"// An IAM policy in JSON format.\n// \n// This parameter is optional. If you pass a policy, the temporary security\n// credentials that are returned by the operation have the permissions that\n// are allowed by both (the intersection of) the access policy of the role that\n// is being assumed, and the policy that you pass. This gives you a way to further\n// restrict the permissions for the resulting temporary security credentials.\n// You cannot use the passed policy to grant permissions that are in excess\n// of those allowed by the access policy of the role that is being assumed.\n// For more information, see Permissions for AssumeRole, AssumeRoleWithSAML,\n// and AssumeRoleWithWebIdentity (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html)\n// in the IAM User Guide.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters up to 2048 characters in length. The characters can be any\n// ASCII character from the space character to the end of the valid character\n// list (\\u0020-\\u00FF). It can also include the tab (\\u0009), linefeed (\\u000A),\n// and carriage return (\\u000D) characters.\n// \n//  The policy plain text must be 2048 bytes or shorter. However, an internal\n// conversion compresses it into a packed binary format with a separate limit.\n// The PackedPolicySize response element indicates by percentage how close to\n// the upper size limit the policy is, with 100% equaling the maximum allowed\n// size.\n","shape":"sessionPolicyDocumentType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"RoleArn","Ref":{"Documentation":"// The Amazon Resource Name (ARN) of the role to assume.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"RoleArn","Ref":{"Documentation":"// The Amazon Resource Name (ARN) of the role to assume.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"RoleSessionName","Ref":{"Documentation":"// An identifier for the assumed role session.\n// \n// Use the role session name to uniquely identify a session when the same role\n// is assumed by different principals or for different reasons. In cross-account\n// scenarios, the role session name is visible to, and can be logged by the\n// account that owns the role. The role session name is also used in the ARN\n// of the assumed role principal. This means that subsequent cross-account API\n// requests using the temporary security credentials will expose the role session\n// name to the external account in their CloudTrail logs.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"roleSessionNameType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"RoleSessionName","Ref":{"Documentation":"// An identifier for the assumed role session.\n// \n// Use the role session name to uniquely identify a session when the same role\n// is assumed by different principals or for different reasons. In cross-account\n// scenarios, the role session name is visible to, and can be logged by the\n// account that owns the role. The role session name is also used in the ARN\n// of the assumed role principal. This means that subsequent cross-account API\n// requests using the temporary security credentials will expose the role session\n// name to the external account in their CloudTrail logs.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"roleSessionNameType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"SerialNumber","Ref":{"Documentation":"// The identification number of the MFA device that is associated with the user\n// who is making the AssumeRole call. Specify this value if the trust policy\n// of the role being assumed includes a condition that requires MFA authentication.\n// The value is either the serial number for a hardware device (such as GAHT12345678)\n// or an Amazon Resource Name (ARN) for a virtual device (such as arn:aws:iam::123456789012:mfa/user).\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"serialNumberType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"TokenCode","Ref":{"Documentation":"// The value provided by the MFA device, if the trust policy of the role being\n// assumed requires MFA (that is, if the policy includes a condition that tests\n// for MFA). If the role being assumed requires MFA and if the TokenCode value\n// is missing or expired, the AssumeRole call returns an \"access denied\" error.\n// \n// The format for this parameter, as described by its regex pattern, is a sequence\n// of six numeric digits.\n","shape":"tokenCodeType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1}]},"AssumeRoleOutput":{"ShapeName":"AssumeRoleOutput","Documentation":"// Contains the response to a successful AssumeRole request, including temporary\n// AWS credentials that can be used to make AWS requests.\n","members":{"AssumedRoleUser":{"Documentation":"// The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers\n// that you can use to refer to the resulting temporary security credentials.\n// For example, you can reference these credentials as a principal in a resource-based\n// policy by using the ARN or assumed role ID. The ARN and ID include the RoleSessionName\n// that you specified when you called AssumeRole.\n","shape":"AssumedRoleUser","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Credentials":{"Documentation":"// The temporary security credentials, which include an access key ID, a secret\n// access key, and a security (or session) token.\n// \n//  Note: The size of the security token that STS APIs return is not fixed.\n// We strongly recommend that you make no assumptions about the maximum size.\n// As of this writing, the typical size is less than 4096 bytes, but that can\n// vary. Also, future updates to AWS might require larger sizes.\n","shape":"Credentials","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"PackedPolicySize":{"Documentation":"// A percentage value that indicates the size of the policy in packed form.\n// The service rejects any policy with a packed size greater than 100 percent,\n// which means the policy exceeded the allowed space.\n","shape":"NonNegativeIntegerType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"AssumeRoleWithSAMLInput":{"ShapeName":"AssumeRoleWithSAMLInput","Documentation":"\n","members":{"DurationSeconds":{"Documentation":"// The duration, in seconds, of the role session. The value can range from 900\n// seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n// to 3600 seconds. An expiration can also be specified in the SAML authentication\n// response's SessionNotOnOrAfter value. The actual expiration time is whichever\n// value is shorter. \n// \n//  The maximum duration for a session is 1 hour, and the minimum duration\n// is 15 minutes, even if values outside this range are specified.\n","shape":"RoleDurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Policy":{"Documentation":"// An IAM policy in JSON format.\n// \n// The policy parameter is optional. If you pass a policy, the temporary security\n// credentials that are returned by the operation have the permissions that\n// are allowed by both the access policy of the role that is being assumed,\n//  and  the policy that you pass. This gives you a way to further restrict\n// the permissions for the resulting temporary security credentials. You cannot\n// use the passed policy to grant permissions that are in excess of those allowed\n// by the access policy of the role that is being assumed. For more information,\n// Permissions for AssumeRole, AssumeRoleWithSAML, and AssumeRoleWithWebIdentity\n// (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html)\n// in the IAM User Guide. \n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters up to 2048 characters in length. The characters can be any\n// ASCII character from the space character to the end of the valid character\n// list (\\u0020-\\u00FF). It can also include the tab (\\u0009), linefeed (\\u000A),\n// and carriage return (\\u000D) characters.\n// \n//  The policy plain text must be 2048 bytes or shorter. However, an internal\n// conversion compresses it into a packed binary format with a separate limit.\n// The PackedPolicySize response element indicates by percentage how close to\n// the upper size limit the policy is, with 100% equaling the maximum allowed\n// size.\n","shape":"sessionPolicyDocumentType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"PrincipalArn":{"Documentation":"// The Amazon Resource Name (ARN) of the SAML provider in IAM that describes\n// the IdP.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"RoleArn":{"Documentation":"// The Amazon Resource Name (ARN) of the role that the caller is assuming.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"SAMLAssertion":{"Documentation":"// The base-64 encoded SAML authentication response provided by the IdP.\n// \n// For more information, see Configuring a Relying Party and Adding Claims\n// (http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html)\n// in the Using IAM guide.\n","shape":"SAMLAssertionType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":["RoleArn","PrincipalArn","SAMLAssertion"],"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":[{"Name":"DurationSeconds","Ref":{"Documentation":"// The duration, in seconds, of the role session. The value can range from 900\n// seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n// to 3600 seconds. An expiration can also be specified in the SAML authentication\n// response's SessionNotOnOrAfter value. The actual expiration time is whichever\n// value is shorter. \n// \n//  The maximum duration for a session is 1 hour, and the minimum duration\n// is 15 minutes, even if values outside this range are specified.\n","shape":"RoleDurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"Policy","Ref":{"Documentation":"// An IAM policy in JSON format.\n// \n// The policy parameter is optional. If you pass a policy, the temporary security\n// credentials that are returned by the operation have the permissions that\n// are allowed by both the access policy of the role that is being assumed,\n//  and  the policy that you pass. This gives you a way to further restrict\n// the permissions for the resulting temporary security credentials. You cannot\n// use the passed policy to grant permissions that are in excess of those allowed\n// by the access policy of the role that is being assumed. For more information,\n// Permissions for AssumeRole, AssumeRoleWithSAML, and AssumeRoleWithWebIdentity\n// (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html)\n// in the IAM User Guide. \n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters up to 2048 characters in length. The characters can be any\n// ASCII character from the space character to the end of the valid character\n// list (\\u0020-\\u00FF). It can also include the tab (\\u0009), linefeed (\\u000A),\n// and carriage return (\\u000D) characters.\n// \n//  The policy plain text must be 2048 bytes or shorter. However, an internal\n// conversion compresses it into a packed binary format with a separate limit.\n// The PackedPolicySize response element indicates by percentage how close to\n// the upper size limit the policy is, with 100% equaling the maximum allowed\n// size.\n","shape":"sessionPolicyDocumentType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"PrincipalArn","Ref":{"Documentation":"// The Amazon Resource Name (ARN) of the SAML provider in IAM that describes\n// the IdP.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"PrincipalArn","Ref":{"Documentation":"// The Amazon Resource Name (ARN) of the SAML provider in IAM that describes\n// the IdP.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"RoleArn","Ref":{"Documentation":"// The Amazon Resource Name (ARN) of the role that the caller is assuming.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"RoleArn","Ref":{"Documentation":"// The Amazon Resource Name (ARN) of the role that the caller is assuming.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"SAMLAssertion","Ref":{"Documentation":"// The base-64 encoded SAML authentication response provided by the IdP.\n// \n// For more information, see Configuring a Relying Party and Adding Claims\n// (http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html)\n// in the Using IAM guide.\n","shape":"SAMLAssertionType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"SAMLAssertion","Ref":{"Documentation":"// The base-64 encoded SAML authentication response provided by the IdP.\n// \n// For more information, see Configuring a Relying Party and Adding Claims\n// (http://docs.aws.amazon.com/IAM/latest/UserGuide/create-role-saml-IdP-tasks.html)\n// in the Using IAM guide.\n","shape":"SAMLAssertionType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1}]},"AssumeRoleWithSAMLOutput":{"ShapeName":"AssumeRoleWithSAMLOutput","Documentation":"// Contains the response to a successful AssumeRoleWithSAML request, including\n// temporary AWS credentials that can be used to make AWS requests.\n","members":{"AssumedRoleUser":{"Documentation":"// The identifiers for the temporary security credentials that the operation\n// returns.\n","shape":"AssumedRoleUser","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Audience":{"Documentation":"// The value of the Recipient attribute of the SubjectConfirmationData element\n// of the SAML assertion.\n","shape":"Audience","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Credentials":{"Documentation":"// The temporary security credentials, which include an access key ID, a secret\n// access key, and a security (or session) token.\n// \n//  Note: The size of the security token that STS APIs return is not fixed.\n// We strongly recommend that you make no assumptions about the maximum size.\n// As of this writing, the typical size is less than 4096 bytes, but that can\n// vary. Also, future updates to AWS might require larger sizes.\n","shape":"Credentials","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Issuer":{"Documentation":"// The value of the Issuer element of the SAML assertion.\n","shape":"Issuer","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"NameQualifier":{"Documentation":"// A hash value based on the concatenation of the Issuer response value, the\n// AWS account ID, and the friendly name (the last part of the ARN) of the SAML\n// provider in IAM. The combination of NameQualifier and Subject can be used\n// to uniquely identify a federated user. \n// \n// The following pseudocode shows how the hash value is calculated:\n// \n//  BASE64 ( SHA1 ( \"https://example.com/saml\" + \"123456789012\" + \"/MySAMLIdP\"\n// ) )\n","shape":"NameQualifier","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"PackedPolicySize":{"Documentation":"// A percentage value that indicates the size of the policy in packed form.\n// The service rejects any policy with a packed size greater than 100 percent,\n// which means the policy exceeded the allowed space.\n","shape":"NonNegativeIntegerType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Subject":{"Documentation":"// The value of the NameID element in the Subject element of the SAML assertion.\n","shape":"Subject","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"SubjectType":{"Documentation":"// The format of the name ID, as defined by the Format attribute in the NameID\n// element of the SAML assertion. Typical examples of the format are transient\n// or persistent. \n// \n//  If the format includes the prefix urn:oasis:names:tc:SAML:2.0:nameid-format,\n// that prefix is removed. For example, urn:oasis:names:tc:SAML:2.0:nameid-format:transient\n// is returned as transient. If the format includes any other prefix, the format\n// is returned with no modifications.\n","shape":"SubjectType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"AssumeRoleWithWebIdentityInput":{"ShapeName":"AssumeRoleWithWebIdentityInput","Documentation":"\n","members":{"DurationSeconds":{"Documentation":"// The duration, in seconds, of the role session. The value can range from 900\n// seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n// to 3600 seconds.\n","shape":"RoleDurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Policy":{"Documentation":"// An IAM policy in JSON format.\n// \n// The policy parameter is optional. If you pass a policy, the temporary security\n// credentials that are returned by the operation have the permissions that\n// are allowed by both the access policy of the role that is being assumed,\n//  and  the policy that you pass. This gives you a way to further restrict\n// the permissions for the resulting temporary security credentials. You cannot\n// use the passed policy to grant permissions that are in excess of those allowed\n// by the access policy of the role that is being assumed. For more information,\n// see Permissions for AssumeRoleWithWebIdentity (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html)\n// in the IAM User Guide. \n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters up to 2048 characters in length. The characters can be any\n// ASCII character from the space character to the end of the valid character\n// list (\\u0020-\\u00FF). It can also include the tab (\\u0009), linefeed (\\u000A),\n// and carriage return (\\u000D) characters.\n// \n//  The policy plain text must be 2048 bytes or shorter. However, an internal\n// conversion compresses it into a packed binary format with a separate limit.\n// The PackedPolicySize response element indicates by percentage how close to\n// the upper size limit the policy is, with 100% equaling the maximum allowed\n// size.\n","shape":"sessionPolicyDocumentType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"ProviderId":{"Documentation":"// The fully qualified host component of the domain name of the identity provider.\n// \n// Specify this value only for OAuth 2.0 access tokens. Currently www.amazon.com\n// and graph.facebook.com are the only supported identity providers for OAuth\n// 2.0 access tokens. Do not include URL schemes and port numbers.\n// \n// Do not specify this value for OpenID Connect ID tokens.\n","shape":"urlType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"RoleArn":{"Documentation":"// The Amazon Resource Name (ARN) of the role that the caller is assuming.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"RoleSessionName":{"Documentation":"// An identifier for the assumed role session. Typically, you pass the name\n// or identifier that is associated with the user who is using your application.\n// That way, the temporary security credentials that your application will use\n// are associated with that user. This session name is included as part of the\n// ARN and assumed role ID in the AssumedRoleUser response element.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"roleSessionNameType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"WebIdentityToken":{"Documentation":"// The OAuth 2.0 access token or OpenID Connect ID token that is provided by\n// the identity provider. Your application must get this token by authenticating\n// the user who is using your application with a web identity provider before\n// the application makes an AssumeRoleWithWebIdentity call.\n","shape":"clientTokenType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":["RoleArn","RoleSessionName","WebIdentityToken"],"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":[{"Name":"DurationSeconds","Ref":{"Documentation":"// The duration, in seconds, of the role session. The value can range from 900\n// seconds (15 minutes) to 3600 seconds (1 hour). By default, the value is set\n// to 3600 seconds.\n","shape":"RoleDurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"Policy","Ref":{"Documentation":"// An IAM policy in JSON format.\n// \n// The policy parameter is optional. If you pass a policy, the temporary security\n// credentials that are returned by the operation have the permissions that\n// are allowed by both the access policy of the role that is being assumed,\n//  and  the policy that you pass. This gives you a way to further restrict\n// the permissions for the resulting temporary security credentials. You cannot\n// use the passed policy to grant permissions that are in excess of those allowed\n// by the access policy of the role that is being assumed. For more information,\n// see Permissions for AssumeRoleWithWebIdentity (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_assumerole.html)\n// in the IAM User Guide. \n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters up to 2048 characters in length. The characters can be any\n// ASCII character from the space character to the end of the valid character\n// list (\\u0020-\\u00FF). It can also include the tab (\\u0009), linefeed (\\u000A),\n// and carriage return (\\u000D) characters.\n// \n//  The policy plain text must be 2048 bytes or shorter. However, an internal\n// conversion compresses it into a packed binary format with a separate limit.\n// The PackedPolicySize response element indicates by percentage how close to\n// the upper size limit the policy is, with 100% equaling the maximum allowed\n// size.\n","shape":"sessionPolicyDocumentType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"ProviderId","Ref":{"Documentation":"// The fully qualified host component of the domain name of the identity provider.\n// \n// Specify this value only for OAuth 2.0 access tokens. Currently www.amazon.com\n// and graph.facebook.com are the only supported identity providers for OAuth\n// 2.0 access tokens. Do not include URL schemes and port numbers.\n// \n// Do not specify this value for OpenID Connect ID tokens.\n","shape":"urlType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"RoleArn","Ref":{"Documentation":"// The Amazon Resource Name (ARN) of the role that the caller is assuming.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"RoleArn","Ref":{"Documentation":"// The Amazon Resource Name (ARN) of the role that the caller is assuming.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"RoleSessionName","Ref":{"Documentation":"// An identifier for the assumed role session. Typically, you pass the name\n// or identifier that is associated with the user who is using your application.\n// That way, the temporary security credentials that your application will use\n// are associated with that user. This session name is included as part of the\n// ARN and assumed role ID in the AssumedRoleUser response element.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"roleSessionNameType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"RoleSessionName","Ref":{"Documentation":"// An identifier for the assumed role session. Typically, you pass the name\n// or identifier that is associated with the user who is using your application.\n// That way, the temporary security credentials that your application will use\n// are associated with that user. This session name is included as part of the\n// ARN and assumed role ID in the AssumedRoleUser response element.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"roleSessionNameType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"WebIdentityToken","Ref":{"Documentation":"// The OAuth 2.0 access token or OpenID Connect ID token that is provided by\n// the identity provider. Your application must get this token by authenticating\n// the user who is using your application with a web identity provider before\n// the application makes an AssumeRoleWithWebIdentity call.\n","shape":"clientTokenType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"WebIdentityToken","Ref":{"Documentation":"// The OAuth 2.0 access token or OpenID Connect ID token that is provided by\n// the identity provider. Your application must get this token by authenticating\n// the user who is using your application with a web identity provider before\n// the application makes an AssumeRoleWithWebIdentity call.\n","shape":"clientTokenType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1}]},"AssumeRoleWithWebIdentityOutput":{"ShapeName":"AssumeRoleWithWebIdentityOutput","Documentation":"// Contains the response to a successful AssumeRoleWithWebIdentity request,\n// including temporary AWS credentials that can be used to make AWS requests.\n","members":{"AssumedRoleUser":{"Documentation":"// The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers\n// that you can use to refer to the resulting temporary security credentials.\n// For example, you can reference these credentials as a principal in a resource-based\n// policy by using the ARN or assumed role ID. The ARN and ID include the RoleSessionName\n// that you specified when you called AssumeRole.\n","shape":"AssumedRoleUser","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Audience":{"Documentation":"// The intended audience (also known as client ID) of the web identity token.\n// This is traditionally the client identifier issued to the application that\n// requested the web identity token.\n","shape":"Audience","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Credentials":{"Documentation":"// The temporary security credentials, which include an access key ID, a secret\n// access key, and a security token.\n// \n//  Note: The size of the security token that STS APIs return is not fixed.\n// We strongly recommend that you make no assumptions about the maximum size.\n// As of this writing, the typical size is less than 4096 bytes, but that can\n// vary. Also, future updates to AWS might require larger sizes.\n","shape":"Credentials","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"PackedPolicySize":{"Documentation":"// A percentage value that indicates the size of the policy in packed form.\n// The service rejects any policy with a packed size greater than 100 percent,\n// which means the policy exceeded the allowed space.\n","shape":"NonNegativeIntegerType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Provider":{"Documentation":"// The issuing authority of the web identity token presented. For OpenID Connect\n// ID Tokens this contains the value of the iss field. For OAuth 2.0 access\n// tokens, this contains the value of the ProviderId parameter that was passed\n// in the AssumeRoleWithWebIdentity request.\n","shape":"Issuer","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"SubjectFromWebIdentityToken":{"Documentation":"// The unique user identifier that is returned by the identity provider. This\n// identifier is associated with the WebIdentityToken that was submitted with\n// the AssumeRoleWithWebIdentity call. The identifier is typically unique to\n// the user and the application that acquired the WebIdentityToken (pairwise\n// identifier). For OpenID Connect ID tokens, this field contains the value\n// returned by the identity provider as the token's sub (Subject) claim.\n","shape":"webIdentitySubjectType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"AssumedRoleUser":{"ShapeName":"AssumedRoleUser","Documentation":"// The identifiers for the temporary security credentials that the operation\n// returns.\n","members":{"Arn":{"Documentation":"// The ARN of the temporary security credentials that are returned from the\n// AssumeRole action. For more information about ARNs and how to use them in\n// policies, see IAM Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html)\n// in Using IAM.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"AssumedRoleId":{"Documentation":"// A unique identifier that contains the role ID and the role session name of\n// the role that is being assumed. The role ID is generated by AWS when the\n// role is created.\n","shape":"assumedRoleIdType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":["AssumedRoleId","Arn"],"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"Audience":{"ShapeName":"Audience","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"Credentials":{"ShapeName":"Credentials","Documentation":"// AWS credentials for API authentication.\n","members":{"AccessKeyId":{"Documentation":"// The access key ID that identifies the temporary security credentials.\n","shape":"accessKeyIdType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Expiration":{"Documentation":"// The date on which the current credentials expire.\n","shape":"DateType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"SecretAccessKey":{"Documentation":"// The secret access key that can be used to sign requests.\n","shape":"accessKeySecretType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"SessionToken":{"Documentation":"// The token that users must pass to the service API to use the temporary credentials.\n","shape":"tokenType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":["AccessKeyId","SecretAccessKey","SessionToken","Expiration"],"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"DateType":{"ShapeName":"DateType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"timestamp","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"DecodeAuthorizationMessageInput":{"ShapeName":"DecodeAuthorizationMessageInput","Documentation":"\n","members":{"EncodedMessage":{"Documentation":"// The encoded message that was returned with the response.\n","shape":"encodedMessageType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":["EncodedMessage"],"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":[{"Name":"EncodedMessage","Ref":{"Documentation":"// The encoded message that was returned with the response.\n","shape":"encodedMessageType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"EncodedMessage","Ref":{"Documentation":"// The encoded message that was returned with the response.\n","shape":"encodedMessageType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1}]},"DecodeAuthorizationMessageOutput":{"ShapeName":"DecodeAuthorizationMessageOutput","Documentation":"// A document that contains additional information about the authorization status\n// of a request from an encoded message that is returned in response to an AWS\n// request.\n","members":{"DecodedMessage":{"Documentation":"// An XML document that contains the decoded message.\n","shape":"decodedMessageType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"DurationSecondsType":{"ShapeName":"DurationSecondsType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"integer","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":900,"Max":129600,"Placeholder":false,"deprecated":false,"Validations":null},"FederatedUser":{"ShapeName":"FederatedUser","Documentation":"// Identifiers for the federated user that is associated with the credentials.\n","members":{"Arn":{"Documentation":"// The ARN that specifies the federated user that is associated with the credentials.\n// For more information about ARNs and how to use them in policies, see IAM\n// Identifiers (http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html)\n// in Using IAM.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"FederatedUserId":{"Documentation":"// The string that identifies the federated user associated with the credentials,\n// similar to the unique ID of an IAM user.\n","shape":"federatedIdType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":["FederatedUserId","Arn"],"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"GetCallerIdentityInput":{"ShapeName":"GetCallerIdentityInput","Documentation":"\n","members":{},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"GetCallerIdentityOutput":{"ShapeName":"GetCallerIdentityOutput","Documentation":"// Contains the response to a successful GetCallerIdentity request, including\n// information about the entity making the request.\n","members":{"Account":{"Documentation":"// The AWS account ID number of the account that owns or contains the calling\n// entity.\n","shape":"accountType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Arn":{"Documentation":"// The AWS ARN associated with the calling entity.\n","shape":"arnType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"UserId":{"Documentation":"// The unique identifier of the calling entity. The exact value depends on the\n// type of entity making the call. The values returned are those listed in the\n// aws:userid column in the Principal table (http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_variables.html#principaltable)\n// found on the Policy Variables reference page in the IAM User Guide.\n","shape":"userIdType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"GetFederationTokenInput":{"ShapeName":"GetFederationTokenInput","Documentation":"\n","members":{"DurationSeconds":{"Documentation":"// The duration, in seconds, that the session should last. Acceptable durations\n// for federation sessions range from 900 seconds (15 minutes) to 129600 seconds\n// (36 hours), with 43200 seconds (12 hours) as the default. Sessions obtained\n// using AWS account (root) credentials are restricted to a maximum of 3600\n// seconds (one hour). If the specified duration is longer than one hour, the\n// session obtained by using AWS account (root) credentials defaults to one\n// hour.\n","shape":"DurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Name":{"Documentation":"// The name of the federated user. The name is used as an identifier for the\n// temporary security credentials (such as Bob). For example, you can reference\n// the federated user name in a resource-based policy, such as in an Amazon\n// S3 bucket policy.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"userNameType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Policy":{"Documentation":"// An IAM policy in JSON format that is passed with the GetFederationToken call\n// and evaluated along with the policy or policies that are attached to the\n// IAM user whose credentials are used to call GetFederationToken. The passed\n// policy is used to scope down the permissions that are available to the IAM\n// user, by allowing only a subset of the permissions that are granted to the\n// IAM user. The passed policy cannot grant more permissions than those granted\n// to the IAM user. The final permissions for the federated user are the most\n// restrictive set based on the intersection of the passed policy and the IAM\n// user policy.\n// \n// If you do not pass a policy, the resulting temporary security credentials\n// have no effective permissions. The only exception is when the temporary security\n// credentials are used to access a resource that has a resource-based policy\n// that specifically allows the federated user to access the resource.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters up to 2048 characters in length. The characters can be any\n// ASCII character from the space character to the end of the valid character\n// list (\\u0020-\\u00FF). It can also include the tab (\\u0009), linefeed (\\u000A),\n// and carriage return (\\u000D) characters.\n// \n//  The policy plain text must be 2048 bytes or shorter. However, an internal\n// conversion compresses it into a packed binary format with a separate limit.\n// The PackedPolicySize response element indicates by percentage how close to\n// the upper size limit the policy is, with 100% equaling the maximum allowed\n// size.\n// \n//  For more information about how permissions work, see Permissions for GetFederationToken\n// (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_getfederationtoken.html).\n","shape":"sessionPolicyDocumentType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":["Name"],"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":[{"Name":"DurationSeconds","Ref":{"Documentation":"// The duration, in seconds, that the session should last. Acceptable durations\n// for federation sessions range from 900 seconds (15 minutes) to 129600 seconds\n// (36 hours), with 43200 seconds (12 hours) as the default. Sessions obtained\n// using AWS account (root) credentials are restricted to a maximum of 3600\n// seconds (one hour). If the specified duration is longer than one hour, the\n// session obtained by using AWS account (root) credentials defaults to one\n// hour.\n","shape":"DurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"Name","Ref":{"Documentation":"// The name of the federated user. The name is used as an identifier for the\n// temporary security credentials (such as Bob). For example, you can reference\n// the federated user name in a resource-based policy, such as in an Amazon\n// S3 bucket policy.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"userNameType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":0},{"Name":"Name","Ref":{"Documentation":"// The name of the federated user. The name is used as an identifier for the\n// temporary security credentials (such as Bob). For example, you can reference\n// the federated user name in a resource-based policy, such as in an Amazon\n// S3 bucket policy.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"userNameType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"Policy","Ref":{"Documentation":"// An IAM policy in JSON format that is passed with the GetFederationToken call\n// and evaluated along with the policy or policies that are attached to the\n// IAM user whose credentials are used to call GetFederationToken. The passed\n// policy is used to scope down the permissions that are available to the IAM\n// user, by allowing only a subset of the permissions that are granted to the\n// IAM user. The passed policy cannot grant more permissions than those granted\n// to the IAM user. The final permissions for the federated user are the most\n// restrictive set based on the intersection of the passed policy and the IAM\n// user policy.\n// \n// If you do not pass a policy, the resulting temporary security credentials\n// have no effective permissions. The only exception is when the temporary security\n// credentials are used to access a resource that has a resource-based policy\n// that specifically allows the federated user to access the resource.\n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters up to 2048 characters in length. The characters can be any\n// ASCII character from the space character to the end of the valid character\n// list (\\u0020-\\u00FF). It can also include the tab (\\u0009), linefeed (\\u000A),\n// and carriage return (\\u000D) characters.\n// \n//  The policy plain text must be 2048 bytes or shorter. However, an internal\n// conversion compresses it into a packed binary format with a separate limit.\n// The PackedPolicySize response element indicates by percentage how close to\n// the upper size limit the policy is, with 100% equaling the maximum allowed\n// size.\n// \n//  For more information about how permissions work, see Permissions for GetFederationToken\n// (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_getfederationtoken.html).\n","shape":"sessionPolicyDocumentType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1}]},"GetFederationTokenOutput":{"ShapeName":"GetFederationTokenOutput","Documentation":"// Contains the response to a successful GetFederationToken request, including\n// temporary AWS credentials that can be used to make AWS requests.\n","members":{"Credentials":{"Documentation":"// The temporary security credentials, which include an access key ID, a secret\n// access key, and a security (or session) token.\n// \n//  Note: The size of the security token that STS APIs return is not fixed.\n// We strongly recommend that you make no assumptions about the maximum size.\n// As of this writing, the typical size is less than 4096 bytes, but that can\n// vary. Also, future updates to AWS might require larger sizes.\n","shape":"Credentials","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"FederatedUser":{"Documentation":"// Identifiers for the federated user associated with the credentials (such\n// as arn:aws:sts::123456789012:federated-user/Bob or 123456789012:Bob). You\n// can use the federated user's ARN in your resource-based policies, such as\n// an Amazon S3 bucket policy.\n","shape":"FederatedUser","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"PackedPolicySize":{"Documentation":"// A percentage value indicating the size of the policy in packed form. The\n// service rejects policies for which the packed size is greater than 100 percent\n// of the allowed value.\n","shape":"NonNegativeIntegerType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"GetSessionTokenInput":{"ShapeName":"GetSessionTokenInput","Documentation":"\n","members":{"DurationSeconds":{"Documentation":"// The duration, in seconds, that the credentials should remain valid. Acceptable\n// durations for IAM user sessions range from 900 seconds (15 minutes) to 129600\n// seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions\n// for AWS account owners are restricted to a maximum of 3600 seconds (one hour).\n// If the duration is longer than one hour, the session for AWS account owners\n// defaults to one hour.\n","shape":"DurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"SerialNumber":{"Documentation":"// The identification number of the MFA device that is associated with the IAM\n// user who is making the GetSessionToken call. Specify this value if the IAM\n// user has a policy that requires MFA authentication. The value is either the\n// serial number for a hardware device (such as GAHT12345678) or an Amazon Resource\n// Name (ARN) for a virtual device (such as arn:aws:iam::123456789012:mfa/user).\n// You can find the device for an IAM user by going to the AWS Management Console\n// and viewing the user's security credentials. \n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"serialNumberType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"TokenCode":{"Documentation":"// The value provided by the MFA device, if MFA is required. If any policy requires\n// the IAM user to submit an MFA code, specify this value. If MFA authentication\n// is required, and the user does not provide a code when requesting a set of\n// temporary security credentials, the user will receive an \"access denied\"\n// response when requesting resources that require MFA authentication.\n// \n// The format for this parameter, as described by its regex pattern, is a sequence\n// of six numeric digits.\n","shape":"tokenCodeType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":[{"Name":"DurationSeconds","Ref":{"Documentation":"// The duration, in seconds, that the credentials should remain valid. Acceptable\n// durations for IAM user sessions range from 900 seconds (15 minutes) to 129600\n// seconds (36 hours), with 43200 seconds (12 hours) as the default. Sessions\n// for AWS account owners are restricted to a maximum of 3600 seconds (one hour).\n// If the duration is longer than one hour, the session for AWS account owners\n// defaults to one hour.\n","shape":"DurationSecondsType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"SerialNumber","Ref":{"Documentation":"// The identification number of the MFA device that is associated with the IAM\n// user who is making the GetSessionToken call. Specify this value if the IAM\n// user has a policy that requires MFA authentication. The value is either the\n// serial number for a hardware device (such as GAHT12345678) or an Amazon Resource\n// Name (ARN) for a virtual device (such as arn:aws:iam::123456789012:mfa/user).\n// You can find the device for an IAM user by going to the AWS Management Console\n// and viewing the user's security credentials. \n// \n// The format for this parameter, as described by its regex pattern, is a string\n// of characters consisting of upper- and lower-case alphanumeric characters\n// with no spaces. You can also include any of the following characters: =,.@-\n","shape":"serialNumberType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1},{"Name":"TokenCode","Ref":{"Documentation":"// The value provided by the MFA device, if MFA is required. If any policy requires\n// the IAM user to submit an MFA code, specify this value. If MFA authentication\n// is required, and the user does not provide a code when requesting a set of\n// temporary security credentials, the user will receive an \"access denied\"\n// response when requesting resources that require MFA authentication.\n// \n// The format for this parameter, as described by its regex pattern, is a sequence\n// of six numeric digits.\n","shape":"tokenCodeType","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Type":1}]},"GetSessionTokenOutput":{"ShapeName":"GetSessionTokenOutput","Documentation":"// Contains the response to a successful GetSessionToken request, including\n// temporary AWS credentials that can be used to make AWS requests.\n","members":{"Credentials":{"Documentation":"// The temporary security credentials, which include an access key ID, a secret\n// access key, and a security (or session) token.\n// \n//  Note: The size of the security token that STS APIs return is not fixed.\n// We strongly recommend that you make no assumptions about the maximum size.\n// As of this writing, the typical size is less than 4096 bytes, but that can\n// vary. Also, future updates to AWS might require larger sizes.\n","shape":"Credentials","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false}},"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"structure","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"Issuer":{"ShapeName":"Issuer","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"NameQualifier":{"ShapeName":"NameQualifier","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"NonNegativeIntegerType":{"ShapeName":"NonNegativeIntegerType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"integer","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"RoleDurationSecondsType":{"ShapeName":"RoleDurationSecondsType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"integer","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":900,"Max":3600,"Placeholder":false,"deprecated":false,"Validations":null},"SAMLAssertionType":{"ShapeName":"SAMLAssertionType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":4,"Max":50000,"Placeholder":false,"deprecated":false,"Validations":null},"Subject":{"ShapeName":"Subject","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"SubjectType":{"ShapeName":"SubjectType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"accessKeyIdType":{"ShapeName":"accessKeyIdType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":16,"Max":32,"Placeholder":false,"deprecated":false,"Validations":null},"accessKeySecretType":{"ShapeName":"accessKeySecretType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"accountType":{"ShapeName":"accountType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"arnType":{"ShapeName":"arnType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":20,"Max":2048,"Placeholder":false,"deprecated":false,"Validations":null},"assumedRoleIdType":{"ShapeName":"assumedRoleIdType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":2,"Max":96,"Placeholder":false,"deprecated":false,"Validations":null},"clientTokenType":{"ShapeName":"clientTokenType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":4,"Max":2048,"Placeholder":false,"deprecated":false,"Validations":null},"decodedMessageType":{"ShapeName":"decodedMessageType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"encodedMessageType":{"ShapeName":"encodedMessageType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":1,"Max":10240,"Placeholder":false,"deprecated":false,"Validations":null},"expiredIdentityTokenMessage":{"ShapeName":"expiredIdentityTokenMessage","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"externalIdType":{"ShapeName":"externalIdType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":2,"Max":1224,"Placeholder":false,"deprecated":false,"Validations":null},"federatedIdType":{"ShapeName":"federatedIdType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":2,"Max":96,"Placeholder":false,"deprecated":false,"Validations":null},"idpCommunicationErrorMessage":{"ShapeName":"idpCommunicationErrorMessage","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"idpRejectedClaimMessage":{"ShapeName":"idpRejectedClaimMessage","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"invalidAuthorizationMessage":{"ShapeName":"invalidAuthorizationMessage","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"invalidIdentityTokenMessage":{"ShapeName":"invalidIdentityTokenMessage","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"malformedPolicyDocumentMessage":{"ShapeName":"malformedPolicyDocumentMessage","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"packedPolicyTooLargeMessage":{"ShapeName":"packedPolicyTooLargeMessage","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"regionDisabledMessage":{"ShapeName":"regionDisabledMessage","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"roleSessionNameType":{"ShapeName":"roleSessionNameType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":2,"Max":64,"Placeholder":false,"deprecated":false,"Validations":null},"serialNumberType":{"ShapeName":"serialNumberType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":9,"Max":256,"Placeholder":false,"deprecated":false,"Validations":null},"sessionPolicyDocumentType":{"ShapeName":"sessionPolicyDocumentType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":1,"Max":2048,"Placeholder":false,"deprecated":false,"Validations":null},"tokenCodeType":{"ShapeName":"tokenCodeType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":6,"Max":6,"Placeholder":false,"deprecated":false,"Validations":null},"tokenType":{"ShapeName":"tokenType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"urlType":{"ShapeName":"urlType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":4,"Max":2048,"Placeholder":false,"deprecated":false,"Validations":null},"userIdType":{"ShapeName":"userIdType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":0,"Max":0,"Placeholder":false,"deprecated":false,"Validations":null},"userNameType":{"ShapeName":"userNameType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":2,"Max":32,"Placeholder":false,"deprecated":false,"Validations":null},"webIdentitySubjectType":{"ShapeName":"webIdentitySubjectType","Documentation":"\n","members":null,"member":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"key":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"value":{"Documentation":"","shape":"","Location":"","LocationName":"","QueryName":"","Flattened":false,"Streaming":false,"XMLAttribute":false,"XMLNamespace":{"Prefix":"","URI":""},"Payload":"","idempotencyToken":false,"deprecated":false},"Required":null,"Payload":"","Type":"string","Exception":false,"Enum":null,"EnumConsts":null,"Flattened":false,"Streaming":false,"Location":"","LocationName":"","idempotencyToken":false,"XMLNamespace":{"Prefix":"","URI":""},"Min":6,"Max":255,"Placeholder":false,"deprecated":false,"Validations":null}},"Waiters":null,"Documentation":"// The AWS Security Token Service (STS) is a web service that enables you to\n// request temporary, limited-privilege credentials for AWS Identity and Access\n// Management (IAM) users or for users that you authenticate (federated users).\n// This guide provides descriptions of the STS API. For more detailed information\n// about using this service, go to Temporary Security Credentials (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html).\n// \n//   As an alternative to using the API, you can use one of the AWS SDKs, which\n// consist of libraries and sample code for various programming languages and\n// platforms (Java, Ruby, .NET, iOS, Android, etc.). The SDKs provide a convenient\n// way to create programmatic access to STS. For example, the SDKs take care\n// of cryptographically signing requests, managing errors, and retrying requests\n// automatically. For information about the AWS SDKs, including how to download\n// and install them, see the Tools for Amazon Web Services page (http://aws.amazon.com/tools/).\n// \n//  For information about setting up signatures and authorization through the\n// API, go to Signing AWS API Requests (http://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html)\n// in the AWS General Reference. For general information about the Query API,\n// go to Making Query Requests (http://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html)\n// in Using IAM. For information about using security tokens with other AWS\n// products, go to AWS Services That Work with IAM (http://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html)\n// in the IAM User Guide. \n// \n// If you're new to AWS and need additional technical information about a specific\n// AWS product, you can find the product's technical documentation at http://aws.amazon.com/documentation/\n// (http://aws.amazon.com/documentation/). \n// \n//  Endpoints \n// \n// The AWS Security Token Service (STS) has a default endpoint of https://sts.amazonaws.com\n// that maps to the US East (N. Virginia) region. Additional regions are available\n// and are activated by default. For more information, see Activating and Deactivating\n// AWS STS in an AWS Region (http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html)\n// in the IAM User Guide.\n// \n// For information about STS endpoints, see Regions and Endpoints (http://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region)\n// in the AWS General Reference.\n// \n//  Recording API requests \n// \n// STS supports AWS CloudTrail, which is a service that records AWS calls for\n// your AWS account and delivers log files to an Amazon S3 bucket. By using\n// information collected by CloudTrail, you can determine what requests were\n// successfully made to STS, who made the request, when it was made, and so\n// on. To learn more about CloudTrail, including how to turn it on and find\n// your log files, see the AWS CloudTrail User Guide (http://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html).\n","NoRemoveUnusedShapes":false,"NoRenameToplevelShapes":false,"NoInitMethods":false,"NoStringerMethods":false,"NoConstServiceNames":false,"NoValidataShapeMethods":false,"SvcClientImportPath":"github.com/aws/aws-sdk-go/service"}
